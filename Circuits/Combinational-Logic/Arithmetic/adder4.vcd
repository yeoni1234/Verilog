$date
	Wed May 10 01:23:35 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module adder32 $end
$var wire 32 ! a [31:0] $end
$var wire 32 " b [31:0] $end
$var wire 1 # cin $end
$var wire 32 $ sum [31:0] $end
$var wire 1 % cout $end
$var wire 8 & c_w [7:0] $end
$scope module inst0 $end
$var wire 4 ' a [3:0] $end
$var wire 4 ( b [3:0] $end
$var wire 1 # cin $end
$var wire 4 ) sum [3:0] $end
$var wire 1 * cout $end
$var wire 5 + c_w [4:0] $end
$scope module inst0 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 . cin $end
$var wire 1 / sum $end
$var wire 1 0 cout $end
$upscope $end
$scope module inst1 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 3 cin $end
$var wire 1 4 sum $end
$var wire 1 5 cout $end
$upscope $end
$scope module inst2 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 8 cin $end
$var wire 1 9 sum $end
$var wire 1 : cout $end
$upscope $end
$scope module inst3 $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 = cin $end
$var wire 1 > sum $end
$var wire 1 ? cout $end
$upscope $end
$upscope $end
$scope module inst1 $end
$var wire 4 @ a [3:0] $end
$var wire 4 A b [3:0] $end
$var wire 1 B cin $end
$var wire 4 C sum [3:0] $end
$var wire 1 D cout $end
$var wire 5 E c_w [4:0] $end
$scope module inst0 $end
$var wire 1 F a $end
$var wire 1 G b $end
$var wire 1 H cin $end
$var wire 1 I sum $end
$var wire 1 J cout $end
$upscope $end
$scope module inst1 $end
$var wire 1 K a $end
$var wire 1 L b $end
$var wire 1 M cin $end
$var wire 1 N sum $end
$var wire 1 O cout $end
$upscope $end
$scope module inst2 $end
$var wire 1 P a $end
$var wire 1 Q b $end
$var wire 1 R cin $end
$var wire 1 S sum $end
$var wire 1 T cout $end
$upscope $end
$scope module inst3 $end
$var wire 1 U a $end
$var wire 1 V b $end
$var wire 1 W cin $end
$var wire 1 X sum $end
$var wire 1 Y cout $end
$upscope $end
$upscope $end
$scope module inst2 $end
$var wire 4 Z a [3:0] $end
$var wire 4 [ b [3:0] $end
$var wire 1 \ cin $end
$var wire 4 ] sum [3:0] $end
$var wire 1 ^ cout $end
$var wire 5 _ c_w [4:0] $end
$scope module inst0 $end
$var wire 1 ` a $end
$var wire 1 a b $end
$var wire 1 b cin $end
$var wire 1 c sum $end
$var wire 1 d cout $end
$upscope $end
$scope module inst1 $end
$var wire 1 e a $end
$var wire 1 f b $end
$var wire 1 g cin $end
$var wire 1 h sum $end
$var wire 1 i cout $end
$upscope $end
$scope module inst2 $end
$var wire 1 j a $end
$var wire 1 k b $end
$var wire 1 l cin $end
$var wire 1 m sum $end
$var wire 1 n cout $end
$upscope $end
$scope module inst3 $end
$var wire 1 o a $end
$var wire 1 p b $end
$var wire 1 q cin $end
$var wire 1 r sum $end
$var wire 1 s cout $end
$upscope $end
$upscope $end
$scope module inst3 $end
$var wire 4 t a [3:0] $end
$var wire 4 u b [3:0] $end
$var wire 1 v cin $end
$var wire 4 w sum [3:0] $end
$var wire 1 x cout $end
$var wire 5 y c_w [4:0] $end
$scope module inst0 $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 | cin $end
$var wire 1 } sum $end
$var wire 1 ~ cout $end
$upscope $end
$scope module inst1 $end
$var wire 1 !" a $end
$var wire 1 "" b $end
$var wire 1 #" cin $end
$var wire 1 $" sum $end
$var wire 1 %" cout $end
$upscope $end
$scope module inst2 $end
$var wire 1 &" a $end
$var wire 1 '" b $end
$var wire 1 (" cin $end
$var wire 1 )" sum $end
$var wire 1 *" cout $end
$upscope $end
$scope module inst3 $end
$var wire 1 +" a $end
$var wire 1 ," b $end
$var wire 1 -" cin $end
$var wire 1 ." sum $end
$var wire 1 /" cout $end
$upscope $end
$upscope $end
$scope module inst4 $end
$var wire 4 0" a [3:0] $end
$var wire 4 1" b [3:0] $end
$var wire 1 2" cin $end
$var wire 4 3" sum [3:0] $end
$var wire 1 4" cout $end
$var wire 5 5" c_w [4:0] $end
$scope module inst0 $end
$var wire 1 6" a $end
$var wire 1 7" b $end
$var wire 1 8" cin $end
$var wire 1 9" sum $end
$var wire 1 :" cout $end
$upscope $end
$scope module inst1 $end
$var wire 1 ;" a $end
$var wire 1 <" b $end
$var wire 1 =" cin $end
$var wire 1 >" sum $end
$var wire 1 ?" cout $end
$upscope $end
$scope module inst2 $end
$var wire 1 @" a $end
$var wire 1 A" b $end
$var wire 1 B" cin $end
$var wire 1 C" sum $end
$var wire 1 D" cout $end
$upscope $end
$scope module inst3 $end
$var wire 1 E" a $end
$var wire 1 F" b $end
$var wire 1 G" cin $end
$var wire 1 H" sum $end
$var wire 1 I" cout $end
$upscope $end
$upscope $end
$scope module inst5 $end
$var wire 4 J" a [3:0] $end
$var wire 4 K" b [3:0] $end
$var wire 1 L" cin $end
$var wire 4 M" sum [3:0] $end
$var wire 1 N" cout $end
$var wire 5 O" c_w [4:0] $end
$scope module inst0 $end
$var wire 1 P" a $end
$var wire 1 Q" b $end
$var wire 1 R" cin $end
$var wire 1 S" sum $end
$var wire 1 T" cout $end
$upscope $end
$scope module inst1 $end
$var wire 1 U" a $end
$var wire 1 V" b $end
$var wire 1 W" cin $end
$var wire 1 X" sum $end
$var wire 1 Y" cout $end
$upscope $end
$scope module inst2 $end
$var wire 1 Z" a $end
$var wire 1 [" b $end
$var wire 1 \" cin $end
$var wire 1 ]" sum $end
$var wire 1 ^" cout $end
$upscope $end
$scope module inst3 $end
$var wire 1 _" a $end
$var wire 1 `" b $end
$var wire 1 a" cin $end
$var wire 1 b" sum $end
$var wire 1 c" cout $end
$upscope $end
$upscope $end
$scope module inst6 $end
$var wire 4 d" a [3:0] $end
$var wire 4 e" b [3:0] $end
$var wire 1 f" cin $end
$var wire 4 g" sum [3:0] $end
$var wire 1 h" cout $end
$var wire 5 i" c_w [4:0] $end
$scope module inst0 $end
$var wire 1 j" a $end
$var wire 1 k" b $end
$var wire 1 l" cin $end
$var wire 1 m" sum $end
$var wire 1 n" cout $end
$upscope $end
$scope module inst1 $end
$var wire 1 o" a $end
$var wire 1 p" b $end
$var wire 1 q" cin $end
$var wire 1 r" sum $end
$var wire 1 s" cout $end
$upscope $end
$scope module inst2 $end
$var wire 1 t" a $end
$var wire 1 u" b $end
$var wire 1 v" cin $end
$var wire 1 w" sum $end
$var wire 1 x" cout $end
$upscope $end
$scope module inst3 $end
$var wire 1 y" a $end
$var wire 1 z" b $end
$var wire 1 {" cin $end
$var wire 1 |" sum $end
$var wire 1 }" cout $end
$upscope $end
$upscope $end
$scope module inst7 $end
$var wire 4 ~" a [3:0] $end
$var wire 4 !# b [3:0] $end
$var wire 1 "# cin $end
$var wire 4 ## sum [3:0] $end
$var wire 1 % cout $end
$var wire 5 $# c_w [4:0] $end
$scope module inst0 $end
$var wire 1 %# a $end
$var wire 1 &# b $end
$var wire 1 '# cin $end
$var wire 1 (# sum $end
$var wire 1 )# cout $end
$upscope $end
$scope module inst1 $end
$var wire 1 *# a $end
$var wire 1 +# b $end
$var wire 1 ,# cin $end
$var wire 1 -# sum $end
$var wire 1 .# cout $end
$upscope $end
$scope module inst2 $end
$var wire 1 /# a $end
$var wire 1 0# b $end
$var wire 1 1# cin $end
$var wire 1 2# sum $end
$var wire 1 3# cout $end
$upscope $end
$scope module inst3 $end
$var wire 1 4# a $end
$var wire 1 5# b $end
$var wire 1 6# cin $end
$var wire 1 7# sum $end
$var wire 1 8# cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module tb $end
$var wire 4 9# sum [3:0] $end
$var wire 1 :# cout $end
$var reg 4 ;# a [3:0] $end
$var reg 4 <# b [3:0] $end
$var reg 1 =# cin $end
$var integer 32 ># i [31:0] $end
$scope module u0 $end
$var wire 4 ?# a [3:0] $end
$var wire 4 @# b [3:0] $end
$var wire 1 =# cin $end
$var wire 4 A# sum [3:0] $end
$var wire 1 :# cout $end
$var wire 5 B# c_w [4:0] $end
$scope module inst0 $end
$var wire 1 C# a $end
$var wire 1 D# b $end
$var wire 1 E# cin $end
$var wire 1 F# sum $end
$var wire 1 G# cout $end
$upscope $end
$scope module inst1 $end
$var wire 1 H# a $end
$var wire 1 I# b $end
$var wire 1 J# cin $end
$var wire 1 K# sum $end
$var wire 1 L# cout $end
$upscope $end
$scope module inst2 $end
$var wire 1 M# a $end
$var wire 1 N# b $end
$var wire 1 O# cin $end
$var wire 1 P# sum $end
$var wire 1 Q# cout $end
$upscope $end
$scope module inst3 $end
$var wire 1 R# a $end
$var wire 1 S# b $end
$var wire 1 T# cin $end
$var wire 1 U# sum $end
$var wire 1 V# cout $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
b0 B#
b0 A#
b0 @#
b0 ?#
b0 >#
0=#
b0 <#
b0 ;#
0:#
b0 9#
x8#
x7#
x6#
z5#
z4#
x3#
x2#
x1#
z0#
z/#
x.#
x-#
x,#
z+#
z*#
x)#
x(#
x'#
z&#
z%#
bx $#
bx ##
x"#
bz !#
bz ~"
x}"
x|"
x{"
zz"
zy"
xx"
xw"
xv"
zu"
zt"
xs"
xr"
xq"
zp"
zo"
xn"
xm"
xl"
zk"
zj"
bx i"
xh"
bx g"
xf"
bz e"
bz d"
xc"
xb"
xa"
z`"
z_"
x^"
x]"
x\"
z["
zZ"
xY"
xX"
xW"
zV"
zU"
xT"
xS"
xR"
zQ"
zP"
bx O"
xN"
bx M"
xL"
bz K"
bz J"
xI"
xH"
xG"
zF"
zE"
xD"
xC"
xB"
zA"
z@"
x?"
x>"
x="
z<"
z;"
x:"
x9"
x8"
z7"
z6"
bx 5"
x4"
bx 3"
x2"
bz 1"
bz 0"
x/"
x."
x-"
z,"
z+"
x*"
x)"
x("
z'"
z&"
x%"
x$"
x#"
z""
z!"
x~
x}
x|
z{
zz
bx y
xx
bx w
xv
bz u
bz t
xs
xr
xq
zp
zo
xn
xm
xl
zk
zj
xi
xh
xg
zf
ze
xd
xc
xb
za
z`
bx _
x^
bx ]
x\
bz [
bz Z
xY
xX
xW
zV
zU
xT
xS
xR
zQ
zP
xO
xN
xM
zL
zK
xJ
xI
xH
zG
zF
bx E
xD
bx C
xB
bz A
bz @
x?
x>
x=
z<
z;
x:
x9
x8
z7
z6
x5
x4
x3
z2
z1
x0
x/
z.
z-
z,
bxz +
x*
bx )
bz (
bz '
bzxxxxxxx &
x%
bx $
z#
bz "
bz !
$end
#10
1K#
1J#
1G#
b110 9#
b110 A#
1P#
1E#
1D#
1M#
b1 >#
b11 B#
1=#
b1 <#
b1 @#
b100 ;#
b100 ?#
#20
1:#
1V#
1T#
0P#
1Q#
1O#
0U#
1F#
b1 9#
b1 A#
0K#
b11111 B#
1L#
1N#
1S#
1C#
1H#
0M#
b10 >#
b1101 <#
b1101 @#
b11 ;#
b11 ?#
#30
0:#
0F#
b1000 9#
b1000 A#
1U#
b1111 B#
0V#
0D#
1I#
0N#
0S#
0H#
1M#
b11 >#
b10 <#
b10 @#
b101 ;#
b101 ?#
#40
1:#
1P#
b100 9#
b100 A#
0U#
b11111 B#
1V#
1N#
1R#
b100 >#
b110 <#
b110 @#
b1101 ;#
b1101 ?#
#50
0P#
0O#
1K#
b11011 B#
0L#
b1010 9#
b1010 A#
1U#
0I#
1S#
b101 >#
b1100 <#
b1100 @#
#60
0P#
0:#
0J#
0O#
0V#
1F#
0G#
b1011 9#
b1011 A#
1K#
0L#
0E#
1D#
0S#
0C#
1H#
0R#
b110 >#
b1000 B#
0=#
b101 <#
b101 @#
b110 ;#
b110 ?#
#70
1P#
1O#
0K#
1L#
1J#
b1100 9#
b1100 A#
0F#
b1110 B#
1G#
1I#
1C#
0H#
b111 >#
b111 <#
b111 @#
b101 ;#
b101 ?#
#80
0J#
1:#
1F#
0G#
0P#
0K#
b1 9#
b1 A#
0U#
b11100 B#
1V#
0D#
0N#
1H#
1R#
b1000 >#
b10 <#
b10 @#
b1111 ;#
b1111 ?#
#90
0:#
1U#
0V#
0T#
b1101 9#
b1101 A#
1P#
0Q#
0O#
b0 B#
0L#
1D#
0I#
1N#
0C#
0H#
0M#
b1001 >#
b101 <#
b101 @#
b1000 ;#
b1000 ?#
#100
1K#
1:#
1J#
1T#
1U#
1V#
1G#
b1011 9#
b1011 A#
0P#
1Q#
1E#
1S#
1C#
1M#
b1010 >#
b11011 B#
1=#
b1101 <#
b1101 @#
b1101 ;#
b1101 ?#
#110
0:#
0K#
1P#
0V#
0J#
1O#
0T#
0G#
1L#
0Q#
b1101 9#
b1101 A#
1U#
0E#
0D#
1I#
0N#
1H#
0M#
0R#
b1011 >#
b100 B#
0=#
b1010 <#
b1010 @#
b11 ;#
b11 ?#
#120
0P#
0O#
b1011 9#
b1011 A#
1K#
0L#
1E#
0C#
0H#
b1100 >#
b1 B#
1=#
b0 ;#
b0 ?#
#130
1T#
1Q#
1J#
1O#
0F#
1G#
1U#
1K#
b1111 B#
1L#
b1010 9#
b1010 A#
0P#
1D#
0S#
1H#
1M#
b1101 >#
b11 <#
b11 @#
b110 ;#
b110 ?#
#140
0:#
0T#
1U#
0V#
1F#
b1111 9#
b1111 A#
1P#
b111 B#
0Q#
1S#
1C#
0M#
b1110 >#
b1011 <#
b1011 @#
b11 ;#
b11 ?#
#150
1:#
0K#
0U#
1V#
0J#
1T#
0G#
b1 9#
b1 A#
0P#
b11101 B#
1Q#
0D#
1N#
0C#
b1111 >#
b1110 <#
b1110 @#
b10 ;#
b10 ?#
