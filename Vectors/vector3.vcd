$date
	Tue Mar 14 16:59:37 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb $end
$var wire 8 ! z [7:0] $end
$var wire 8 " y [7:0] $end
$var wire 8 # x [7:0] $end
$var wire 8 $ w [7:0] $end
$var reg 5 % a [4:0] $end
$var reg 5 & b [4:0] $end
$var reg 5 ' c [4:0] $end
$var reg 5 ( d [4:0] $end
$var reg 5 ) e [4:0] $end
$var reg 5 * f [4:0] $end
$var integer 32 + i [31:0] $end
$scope module inst1 $end
$var wire 5 , a [4:0] $end
$var wire 5 - b [4:0] $end
$var wire 5 . c [4:0] $end
$var wire 5 / d [4:0] $end
$var wire 5 0 e [4:0] $end
$var wire 5 1 f [4:0] $end
$var wire 8 2 z [7:0] $end
$var wire 8 3 y [7:0] $end
$var wire 8 4 x [7:0] $end
$var wire 8 5 w [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 5
b0 4
b0 3
b11 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b11 !
$end
#10000000
b10011011 !
b10011011 2
b1000010 "
b1000010 3
b10000110 #
b10000110 4
b1000 $
b1000 5
b1 +
b110 *
b110 1
b101 )
b101 0
b100 (
b100 /
b11 '
b11 .
b10 &
b10 -
b1 %
b1 ,
#20000000
b110011 !
b110011 2
b10000101 "
b10000101 3
b1100 #
b1100 4
b10001 $
b10001 5
b10 +
b1100 *
b1100 1
b1010 )
b1010 0
b1000 (
b1000 /
b110 '
b110 .
b100 &
b100 -
b10 %
b10 ,
#30000000
b11001011 !
b11001011 2
b11000111 "
b11000111 3
b10010010 #
b10010010 4
b11001 $
b11001 5
b11 +
b10010 *
b10010 1
b1111 )
b1111 0
b1100 (
b1100 /
b1001 '
b1001 .
b110 &
b110 -
b11 %
b11 ,
#40000000
b1100011 !
b1100011 2
b1010 "
b1010 3
b11001 #
b11001 4
b100010 $
b100010 5
b100 +
b11000 *
b11000 1
b10100 )
b10100 0
b10000 (
b10000 /
b1100 '
b1100 .
b1000 &
b1000 -
b100 %
b100 ,
#50000000
b11111011 !
b11111011 2
b1001100 "
b1001100 3
b10011111 #
b10011111 4
b101010 $
b101010 5
b101 +
b11110 *
b11110 1
b11001 )
b11001 0
b10100 (
b10100 /
b1111 '
b1111 .
b1010 &
b1010 -
b101 %
b101 ,
#60000000
b10111 !
b10111 2
b10001111 "
b10001111 3
b100101 #
b100101 4
b110011 $
b110011 5
b110 +
b101 *
b101 1
b11110 )
b11110 0
b11000 (
b11000 /
b10010 '
b10010 .
b1100 &
b1100 -
b110 %
b110 ,
#70000000
b101111 !
b101111 2
b11000010 "
b11000010 3
b10101011 #
b10101011 4
b111011 $
b111011 5
b111 +
b1011 *
b1011 1
b100 )
b100 0
b11100 (
b11100 /
b10101 '
b10101 .
b1110 &
b1110 -
b111 %
b111 ,
#80000000
b11000111 !
b11000111 2
b10100 "
b10100 3
b110000 #
b110000 4
b1000100 $
b1000100 5
b1000 +
b10001 *
b10001 1
b1001 )
b1001 0
b1 (
b1 /
b11000 '
b11000 .
b10000 &
b10000 -
b1000 %
b1000 ,
#90000000
b1011111 !
b1011111 2
b1010111 "
b1010111 3
b10110110 #
b10110110 4
b1001100 $
b1001100 5
b1001 +
b10111 *
b10111 1
b1110 )
b1110 0
b101 (
b101 /
b11011 '
b11011 .
b10010 &
b10010 -
b1001 %
b1001 ,
#100000000
b11110111 !
b11110111 2
b10011001 "
b10011001 3
b111100 #
b111100 4
b1010101 $
b1010101 5
b1010 +
b11101 *
b11101 1
b10011 )
b10011 0
b1001 (
b1001 /
b11110 '
b11110 .
b10100 &
b10100 -
b1010 %
b1010 ,
#110000000
b10011 !
b10011 2
b11011100 "
b11011100 3
b10000100 #
b10000100 4
b1011101 $
b1011101 5
b1011 +
b100 *
b100 1
b11000 )
b11000 0
b1101 (
b1101 /
b10 '
b10 .
b10110 &
b10110 -
b1011 %
b1011 ,
#120000000
b10101011 !
b10101011 2
b11110 "
b11110 3
b1011 #
b1011 4
b1100110 $
b1100110 5
b1100 +
b1010 *
b1010 1
b11101 )
b11101 0
b10001 (
b10001 /
b101 '
b101 .
b11000 &
b11000 -
b1100 %
b1100 ,
#130000000
b11000011 !
b11000011 2
b1010001 "
b1010001 3
b10010001 #
b10010001 4
b1101110 $
b1101110 5
b1101 +
b10000 *
b10000 1
b11 )
b11 0
b10101 (
b10101 /
b1000 '
b1000 .
b11010 &
b11010 -
b1101 %
b1101 ,
#140000000
b1011011 !
b1011011 2
b10010100 "
b10010100 3
b10111 #
b10111 4
b1110111 $
b1110111 5
b1110 +
b10110 *
b10110 1
b1000 )
b1000 0
b11001 (
b11001 /
b1011 '
b1011 .
b11100 &
b11100 -
b1110 %
b1110 ,
#150000000
b11110011 !
b11110011 2
b11010110 "
b11010110 3
b10011101 #
b10011101 4
b1111111 $
b1111111 5
b1111 +
b11100 *
b11100 1
b1101 )
b1101 0
b11101 (
b11101 /
b1110 '
b1110 .
b11110 &
b11110 -
b1111 %
b1111 ,
#160000000
b1111 !
b1111 2
b101001 "
b101001 3
b1100010 #
b1100010 4
b10000000 $
b10000000 5
b10000 +
b11 *
b11 1
b10010 )
b10010 0
b10 (
b10 /
b10001 '
b10001 .
b1 &
b1 -
b10000 %
b10000 ,
#10000000000
